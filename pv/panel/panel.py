"""
@file       panel.py
@author     Matthew Yu (matthewjkyu@gmail.com)
@brief      Model interface for a PV panel.
@version    0.4.0
@date       2023-09-24
"""

from environment.environment import Environment
from pv.pv import PV


class Panel(PV):
    def __init__(self, env: Environment, params: dict, data_fp=None) -> None:
        super().__init__(env, params, data_fp)

    def get_voltage(self, current: float, root_pos: (int, int, int)) -> float:
        """Get the voltage generated by the panel as a function of the current
        applied across the panel and external environment and internal cell
        characteristics.

        Args:
            current (float): Current across panel. Amps.
            root_pos (int, int, int): X, Y, T point of the panel.

        Returns:
            float: Voltage from panel. Volts.
        """
        v = 0.0
        for module in self._params["modules"].values():
            real_pos = [
                root_pos[0] + module["pos"][0],
                root_pos[1] + module["pos"][1],
                root_pos[2],
            ]
            v += module["instance"].get_voltage(current, real_pos)

        # TODO: lead contribution

        return v

    def get_pos(self) -> list([int, int]):
        pos = []
        for module in self._params["modules"].values():
            module_pos = [
                [module["pos"][0] + x, module["pos"][1] + y]
                for x, y in module["instance"].get_pos()
            ]
            pos.extend(module_pos)

        return pos
